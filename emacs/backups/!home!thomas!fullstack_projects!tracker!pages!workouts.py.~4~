import streamlit as st
import pandas as pd

from pages.utils import init_connection, get_git_hash



def get_workout_info(workout_id):
    """Get workout information from db"""
    with init_connection() as conn:
        workout = pd.read_sql("""
    set search_path = data, public;
    with workout_stage_ids as (
     select workout_stage_id from workout_stages
     where workout_id = %(workout_id)s
    ), workout_exercises as (
     select * from sets
     where workout_stage_id in (select * from workout_stage_ids)
    ), workout_info as (
     select workout_stage_id, set_number, set_weight, set_reps,
     	    exercises.exercise_name
     from workout_exercises
     left join exercises
     on workout_exercises.set_exercise = exercises.exercise_id
    )
    select
	workout_stages.workout_stage_number,
	workout_info.exercise_name,
	workout_info.set_number,
	workout_info.set_weight,
	workout_info.set_reps
    from workout_info
    left join workout_stages
    on workout_info.workout_stage_id = workout_stages.workout_stage_id;
    """, conn, params={"workout_id":workout_id})
    return workout


def get_recent_workouts():
    """Get recent completed workouts."""
    with init_connection() as conn:
        df_recent_workouts = pd.read_sql("""
    set search_path = data, public;
    select * from workouts
    order by workout_id desc
    limit 10;
    """, conn)
    return df_recent_workouts



def show_workout(workout_id, workout_date, workout_name):
    """Display the workout associated with workout_id."""
    df_workout = get_workout_info(workout_id)
    heading_str = "Workout {}, {}, {}".format(workout_id, workout_date, workout_name)
    with st.expander(heading_str):
        st.dataframe(df_workout)


def show_recent_workouts():
    recent_workouts = get_recent_workouts()
    for index, row in recent_workouts.iterrows():
        show_workout(row['workout_id'], row['workout_date'], row['workout_name'])


def app():
    st.header("Workouts")

    show_recent_workouts()
    
